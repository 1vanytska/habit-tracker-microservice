openapi: 3.0.0
info:
  title: Goal Management API
  version: 1.0.0
  description: API for creating, viewing, updating, archiving, and unarchiving goals

servers:
  - url: https://api.example.com
    description: Production server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    GoalCreateDto:
      type: object
      required:
        - title
        - isPublic
      properties:
        title:
          type: string
          description: Title of the goal
        description:
          type: string
          description: Description of the goal
        isPublic:
          type: boolean
          description: Whether the goal is public or private

    GoalDto:
      type: object
      properties:
        id:
          type: string
          description: Goal ID
        title:
          type: string
        description:
          type: string
        isPublic:
          type: boolean
        categoryId:
          type: string
          nullable: true
        deadline:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          enum: [ACHIEVED, IN_PROGRESS, FAILED]
        archived:
          type: boolean
        ownerId:
          type: string

    GoalPreviewDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        views:
          type: integer
        likes:
          type: integer
        categoryId:
          type: string
          nullable: true
        status:
          type: string
          enum: [ACHIEVED, IN_PROGRESS, FAILED]

    GoalUpdateDto:
      type: object
      properties:
        images:
          type: array
          items:
            type: string
            format: uri
        categoryId:
          type: string
        deadline:
          type: string
          format: date-time
        status:
          type: string
          enum: [ACHIEVED, IN_PROGRESS, FAILED]

  parameters:
    goal_id:
      name: goal_id
      in: path
      required: true
      schema:
        type: string
      description: ID of the goal

    sort:
      name: sort
      in: query
      schema:
        type: string
        enum: [views, likes, title]
      description: Sort goals by this field

    direction:
      name: direction
      in: query
      schema:
        type: string
        enum: [ASC, DESC]
      description: Sort direction

    category_id:
      name: category_id
      in: query
      schema:
        type: string
      description: Filter by category ID

    status:
      name: status
      in: query
      schema:
        type: string
        enum: [ACHIEVED, IN_PROGRESS, FAILED]
      description: Filter by status

    user_id:
      name: user_id
      in: query
      schema:
        type: string
      description: Filter goals by user ID

    liked:
      name: liked
      in: query
      schema:
        type: boolean
      description: Filter goals liked by the user

paths:
  /goals:
    post:
      summary: Create a new goal
      security:
        - bearerAuth: []
      tags:
        - Goals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalCreateDto'
      responses:
        '201':
          description: Goal created successfully
        '401':
          description: Unauthorized

  /goals/{goal_id}:
    get:
      summary: View a goal
      security:
        - bearerAuth: []
      tags:
        - Goals
      parameters:
        - $ref: '#/components/parameters/goal_id'
      responses:
        '200':
          description: Goal details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalDto'
        '401':
          description: Unauthorized
        '404':
          description: Goal not found

    patch:
      summary: Update a goal
      security:
        - bearerAuth: []
      tags:
        - Goals
      parameters:
        - $ref: '#/components/parameters/goal_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalUpdateDto'
      responses:
        '200':
          description: Goal updated
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (not owner or archived)
        '404':
          description: Goal not found

  /goals/{goal_id}/archive:
    post:
      summary: Archive a goal
      security:
        - bearerAuth: []
      tags:
        - Goals
      parameters:
        - $ref: '#/components/parameters/goal_id'
      responses:
        '200':
          description: Goal archived
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (not owner or already archived)
        '404':
          description: Goal not found

  /goals/unarchive:
    post:
      summary: Unarchive a goal
      security:
        - bearerAuth: []
      tags:
        - Goals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - goalId
              properties:
                goalId:
                  type: string
                  description: ID of the goal to unarchive
      responses:
        '200':
          description: Goal unarchived
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (if goal not archived or user no rights)
        '404':
          description: Goal not found

  /goals/ratings:
    get:
      summary: View goal ratings
      security:
        - bearerAuth: []
      tags:
        - Goals
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/direction'
        - $ref: '#/components/parameters/category_id'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/user_id'
        - $ref: '#/components/parameters/liked'
      responses:
        '200':
          description: List of goal previews with ratings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoalPreviewDto'
        '401':
          description: Unauthorized
