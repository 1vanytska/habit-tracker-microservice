openapi: 3.0.3
info:
  title: Authentication API
  version: 1.0.0
  description: API for authenticating users and moderators.

tags:
  - name: Authentication
    description: Endpoints for user registration and login

paths:
  /auth/register/moderator:
    post:
      tags:
        - Authentication
      summary: Register Moderator
      description: Admin endpoint to register a new moderator.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              profile_picture: "img.jpg"
              nickname: "nicknameModerator"
              email: "moderator@example.com"
              password: "securePassword123"
      responses:
        '201':
          description: Moderator registered successfully

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register User
      description: Register a new user and create their account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              profile_picture: "img.jpg"
              nickname: "nickname"
              email: "user@example.com"
              password: "userPassword456"
      responses:
        '201':
          description: User registered successfully

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User Login
      description: Authenticate user using email or nickname and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              login: "user@example.com"
              password: "userPassword456"
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              example:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - profile_picture
        - nickname
        - email
        - password
      properties:
        profile_picture:
          type: string
          description: URL or filename of the user's profile picture
          example: "img.jpg"
        nickname:
          type: string
          description: User's unique nickname
          example: "nickname"
        email:
          type: string
          format: email
          description: User's email address
          example: "user@example.com"
        password:
          type: string
          description: Password for the account
          example: "securePassword123"

    LoginRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: Email or nickname used for login
          example: "user@example.com"
        password:
          type: string
          description: Account password
          example: "securePassword123"

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT token used for authenticated requests
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
